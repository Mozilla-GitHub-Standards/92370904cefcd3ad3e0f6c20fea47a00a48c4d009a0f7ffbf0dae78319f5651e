# slapd.conf.acls
#
# See slapd.access(5) for details on ACLs
#
# Andrew Findlay
# andrew.findlay@skills-1st.co.uk
# 20 June 2011

# Enforce ACL rules on the content of entries that are about to be added

add_content_acl on

# DIT Content Rule for inetOrgPerson (2.16.840.1.113730.3.2.2)
#
# Prevent unwanted objectclasses on user entries
#
# This is a belt-and-braces protection as normally only the registration agent
# and LDAP admins can change the objectClass attribute
#
# We also make both uid and uniqueIdentifier mandatory:
#    uid is the username, so it is essential
#    uniqueIdentifier is the naming attribute
#
# Note that because this is part of the schema, even the rootDN cannot break the rules

ditcontentrule ( 2.16.840.1.113730.3.2.2
	NAME 'dcrInetOrgPerson'
	DESC 'Control content of inetOrgPerson entries'
	AUX ( mozilliansObject $ mozilliansPerson )
	MUST ( uid $ uniqueIdentifier )
	)

# We define some attribute sets as objectclasses for convenience.
# Note that these are NOT intended to be used as objectclasses of actual entries.
# The base OID for these is 1.3.6.1.4.1.13769.3000.3

objectclass ( 1.3.6.1.4.1.13769.3000.3.1
	NAME 'attrsetSelfModifiable'
        DESC 'Attributes that a user can modify in their own entry'
        AUXILIARY
        MAY ( cn $ sn $ displayname $ mail $ uid $ telephoneNumber $ jpegPhoto $ description )
        )

# Permit everyone to read the service entries

access to dn.exact=""
	by * read

access to dn.exact="cn=Subschema"
	by * read

# Permit everyone to read the main structural entries

access to dn.exact="dc=mozillians,dc=org"
	by * read

access to dn.exact="ou=people,dc=mozillians,dc=org"
	by * read

# Users may change their own passwords
# Anon may authenticate

access to attrs="userPassword"
	by self =w
	by * auth

# We allow all authenticated users to view and modify the basic
# informational attributes in their entry

access to attrs="@attrsetSelfModifiable"
	by self write
	by * break

# Massive simplification for now:
# treat all authenticated users as Mozillians
# even if they have not been vouched for

# User may read their own voucher but not modify it
access to attrs="mozilliansVouchedBy"
	by self read
	by * break

# Mozillians may add their own DN to another user's voucher attribute
access to attrs="mozilliansVouchedBy" val.regex="^(.*)$"
	by dn.exact,expand="${v1}" set="user/mozilliansVouchedBy" add
	by * break

# Mozillians may read/search everyone's voucher attribute
access to attrs="mozilliansVouchedBy"
	by set="user/mozilliansVouchedBy" read
	by * break

# Mozillians may read/search everything that is not restricted above
access to *
	by set="user/mozilliansVouchedBy" read
	by * break

# Anon may read and search just enough to find a DN given a uid
# non-Mozillian users can do this too
access to attrs="entry"
	by anonymous read
	by users read
	by * break

access to attrs="uid"
	by anonymous search
	by users search
	by * break

access to attrs="uniqueIdentifier"
	by anonymous read
	by users search
	by * break

# Default deny

access to *
	by * none

